SV_data_orders <- SV_data_orders %>% select("Species", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data_avg <- (SV_data_orders %>% group_by(Species)
%>% mutate(Species = as.character(Species), SV = as.numeric(SV))
%>% mutate(nonzero_exists = any(SV > 0))
%>% filter((nonzero_exists & SV == 0))
%>% summarise(SV = median(SV, na.rm = TRUE))
%>% ungroup()
%>% mutate(SV = as.character(SV))
%>% left_join(SV_data, by = "Species")
%>% rename("SV" = "SV.x")
%>% select("Species", "SV", "order", "presence", "genome.assembly", "ott_id", "flags", "tips")
%>% group_by(Species)
%>% distinct()
%>% ungroup()
)
# this gets rid of duplicate entries by averaging their SV values.
# for cases where a species has nonzero and zero sv values the 0 gets ignored.
# cases like this ^ can result in duplicates because the presence column is difference for the row(s) with 0 vs the row(s) with nonzero SV values. need to make sure to keep the "present" value.
SV_data_avg <- SV_data_orders %>% group_by(Species)
SV_data_avg <- SV_data_avg %>% mutate(Species = as.character(Species), SV = as.numeric(SV))
SV_data_avg <- SV_data_avg %>% mutate(SV = ifelse(SV == 0, NA, SV))
#SV_data_avg <- SV_data_avg %>% mutate(test = !(any(SV > 0) & SV ==0))
#SV_data_avg <- SV_data_avg %>% filter(!(any(SV > 0) & SV == 0))
SV_data_avg <- SV_data_avg %>% mutate(SV2 = median(SV, na.rm = TRUE))
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(SV3 = ifelse(all(is.na(SV)) & presence == "absent",0,SV2))
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(presence = ifelse( presence == "absent" & any(presence == "present"), "present", presence ))
SV_data_avg <- SV_data_avg %>% select("Species", "order", "SV3", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data_avg <- SV_data_avg %>% distinct()
SV_data_avg <- SV_data_avg %>% ungroup()
SV_data_avg <- SV_data_avg %>% mutate(tips = str_replace(tips, " ", "_"))
# duplicates because of diff orders for same species:
# undefined_orders <- SV_data_avg %>% group_by(Species) %>% filter(n_distinct(order) > 1)
# ohh this is beacause initially some species have orders in one entry but not in others! perhaps remove all those and redo orders with fishbase
# solved
# check for other duplicates in species names:
SV_duplicates <- SV_data_avg[duplicated(SV_data_avg$Species),]
View(SV_duplicates)
View(SV_duplicates)
write.csv(SV_data_avg, "/Users/user2/Desktop/SV_project/SV_data_avg.csv")
SV_data_avg <- read.csv("/Users/user2/Desktop/SV_project/SV_data_avg.csv")
# SV presence/ absence
tr <- tol_induced_subtree(ott_ids = SV_data_avg$ott_id[SV_data_avg$flags %in% c("sibling_higher", "")], label_format = "id")
tr <- multi2di(tr)
tr$tip.label <- SV_data_avg$tips[match(tr$tip.label, paste("ott", SV_data_avg$ott_id, sep = ""))]
SV_data_avg <- read.csv("/Users/user2/Desktop/SV_project/SV_data_avg.csv")
SV_data_avg <- SV_data_avg[SV_data_avg$tips %in% tr$tip.label, ]
trpy_n <- keep.tip(tr, tip = SV_data_avg$tips)
trpy_n$edge.length[trpy_n$edge.length == 0] <- 0.001
SV_data_avg <- SV_data_orders %>% group_by(Species)
SV_data_avg <- SV_data_avg %>% mutate(Species = as.character(Species), SV = as.numeric(SV))
SV_data_avg <- SV_data_avg %>% mutate(SV = ifelse(SV == 0, NA, SV))
#SV_data_avg <- SV_data_avg %>% mutate(test = !(any(SV > 0) & SV ==0))
#SV_data_avg <- SV_data_avg %>% filter(!(any(SV > 0) & SV == 0))
SV_data_avg <- SV_data_avg %>% mutate(SV2 = median(SV, na.rm = TRUE))
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(SV3 = ifelse(all(is.na(SV)) & presence == "absent",0,SV2))
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(presence = ifelse( presence == "absent" & any(presence == "present"), "present", presence ))
SV_data_avg <- SV_data_avg %>% select("Species", "order", "SV3", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data_avg <- SV_data_avg %>% distinct()
SV_data_avg <- SV_data_avg %>% ungroup()
SV_data_avg <- SV_data_avg %>% mutate(tips = str_replace(tips, " ", "_"))
SV_data_avg <- read.csv("/Users/user2/Desktop/SV_project/SV_data_avg.csv")
SV_data_avg <- SV_data_avg[SV_data_avg$tips %in% tr$tip.label, ]
trpy_n <- keep.tip(tr, tip = SV_data_avg$tips)
trpy_n$edge.length[trpy_n$edge.length == 0] <- 0.001
pwd
getwd()
setwd("/Users/user2/Desktop/SV_project")
source("/Users/user2/Desktop/SV_project/SV_functions.R")
SV_data_avg <- read.csv("/Users/user2/Desktop/SV_project/SV_data_avg.csv")
# SV presence/ absence
tr <- tol_induced_subtree(ott_ids = SV_data_avg$ott_id[SV_data_avg$flags %in% c("sibling_higher", "")], label_format = "id")
tr <- multi2di(tr)
tr$tip.label <- SV_data_avg$tips[match(tr$tip.label, paste("ott", SV_data_avg$ott_id, sep = ""))]
df <- data.frame(names = tr$tip.label, output = SV_data_avg$tips[match(tr$tip.label, paste("ott", SV_data_avg$ott_id, sep = ""))])
View(df)
getwd()
library(ape)
library(corHMM)
library(phangorn)
library(stringr)
library(here)
library(rotl)
library(ggtree)
library(gsheet)
library(dplyr)
library(phytools)
library(geiger)
library(ggplot2)
library(rphylopic)
library(RColorBrewer)
library(ggimage)
library(rfishbase)
library(rentrez)
library(taxize)
# load google sheet
url <- 'https://docs.google.com/spreadsheets/d/1Z2P6dAcoU0-Kh0UqVgIAeongX5IJohuMUKG1PyrNraU/edit?gid=84578656#gid=84578656'
sp_data <- read.csv(text=gsheet2text(url, format='csv'), stringsAsFactors=FALSE)
trait.data <- sp_data[,c("species", "SV", "order")]
trait.data$tips <- trait.data$species
trait.data$tips <- str_replace(trait.data$species, pattern = " ", replacement = "_")
# resolve spcies names with open tree of life
otol_names <- tnrs_match_names(names = trait.data$species, context_name = "Vertebrates", do_approximate_matching = TRUE)
resolved_names <- (otol_names[!(is.na(otol_names$unique_name)),]
%>%  rename( "species" = "search_string")
%>% mutate(species = str_replace(species, " ", "_"))
%>% select(species, unique_name, "ott_id", "flags")
)
resolved_names <- distinct(resolved_names, ott_id, .keep_all = TRUE)
SV_data <- sp_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = tolower(species))
SV_data <- SV_data %>% group_by(species)
SV_data <- SV_data %>% mutate(
genome.assembly = if_else(
genome.assembly == '' & any(genome.assembly == 'y'),
'y',
genome.assembly
)
)
SV_data <- SV_data %>% ungroup()
SV_data <- SV_data %>% left_join(resolved_names, by = "species")
SV_data <- SV_data %>% mutate(tips = unique_name)
SV_data <- SV_data %>% rename("Source" = "source")
SV_data <- SV_data %>% filter(Source != "")
SV_data <- SV_data %>% mutate(SV = str_replace(SV, "2", "1"), str_replace(SV, "0.5", "1"), str_replace(SV, "2.5", "2"), str_replace(SV, "3.5", "4"))
SV_data <- SV_data %>% filter(unique_name !="")
SV_data <- SV_data %>% select("species", "unique_name", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data <- SV_data %>% filter(SV != "")
SV_data <- SV_data %>% mutate(presence = ifelse(SV == "0", "absent", "present"))
SV_data <- SV_data %>% mutate(SV = ifelse(SV == "present", NA, SV))
SV_data <- SV_data %>% rename("Species" = "unique_name")
SV_data <- SV_data %>% select("Species", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips")
# add order, family, genus to the data
# SV_data_orders_ncbi <- SV_data %>% mutate(order = ifelse(is.na(order), purrr::map_chr(unique_name, get_order), order))
fishbase_species <- rfishbase::load_taxa()
SV_data_orders <- SV_data %>% left_join(fishbase_species, by = "Species")
View(SV_data_orders)
SV_data_orders <- SV_data %>% left_join(fishbase_species, by = "Species")
SV_data_orders <- SV_data_orders %>% select("Species", "Order", "Family", "Genus", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips")
View(fishbase_species)
SV_data_orders <- SV_data %>% left_join(fishbase_species, by = "Species")
SV_data_orders <- SV_data_orders %>% mutate(order = ifelse((is.na(order) | order == ""), Order, order))
View(SV_data_orders)
SV_data_orders <- SV_data %>% left_join(fishbase_species, by = "Species")
SV_data_orders <- SV_data_orders %>% select("Species", "Order", "Family", "Genus", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips")
View(SV_data_orders)
View(SV_data_avg)
SV_data_orders <- SV_data %>% left_join(fishbase_species, by = "Species")
SV_data_orders <- SV_data_orders %>% select("Species", "Order", "Family", "Genus", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data_avg <- (SV_data_orders %>% group_by(Species)
%>% mutate(Species = as.character(Species), SV = as.numeric(SV))
%>% mutate(nonzero_exists = any(SV > 0))
%>% filter((nonzero_exists & SV == 0))
%>% summarise(SV = median(SV, na.rm = TRUE))
%>% ungroup()
%>% mutate(SV = as.character(SV))
%>% left_join(SV_data, by = "Species")
%>% rename("SV" = "SV.x")
%>% select("Species", "SV", "order", "presence", "genome.assembly", "ott_id", "flags", "tips")
%>% group_by(Species)
%>% distinct()
%>% ungroup()
)
SV_data_avg <- SV_data_orders %>% group_by(Species)
SV_data_avg <- SV_data_avg %>% mutate(Species = as.character(Species), SV = as.numeric(SV))
SV_data_avg <- SV_data_avg %>% mutate(SV = ifelse(SV == 0, NA, SV))
SV_data_avg <- SV_data_avg %>% mutate(SV2 = median(SV, na.rm = TRUE))
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(SV3 = ifelse(all(is.na(SV)) & presence == "absent",0,SV2))
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(presence = ifelse( presence == "absent" & any(presence == "present"), "present", presence ))
SV_data_avg <- SV_data_avg %>% select("Species", "order", "SV3", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data_avg <- read.csv("/Users/user2/Desktop/SV_project/SV_data_avg.csv")
# SV presence/ absence
tr <- tol_induced_subtree(ott_ids = SV_data_avg$ott_id[SV_data_avg$flags %in% c("sibling_higher", "")], label_format = "id")
tr <- multi2di(tr)
tr$tip.label <- SV_data_avg$tips[match(tr$tip.label, paste("ott", SV_data_avg$ott_id, sep = ""))]
SV_data_avg <- read.csv("/Users/user2/Desktop/SV_project/SV_data_avg.csv")
SV_data_orders <- SV_data %>% left_join(fishbase_species, by = "Species")
SV_data_orders <- SV_data_orders %>% select("Species", "Order", "Family", "Genus", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data_avg <- (SV_data_orders %>% group_by(Species)
%>% mutate(Species = as.character(Species), SV = as.numeric(SV))
%>% mutate(nonzero_exists = any(SV > 0))
%>% filter((nonzero_exists & SV == 0))
%>% summarise(SV = median(SV, na.rm = TRUE))
%>% ungroup()
%>% mutate(SV = as.character(SV))
%>% left_join(SV_data, by = "Species")
%>% rename("SV" = "SV.x")
%>% select("Species", "SV", "order", "presence", "genome.assembly", "ott_id", "flags", "tips")
%>% group_by(Species)
%>% distinct()
%>% ungroup()
)
# this gets rid of duplicate entries by averaging their SV values.
# for cases where a species has nonzero and zero sv values the 0 gets ignored.
# cases like this ^ can result in duplicates because the presence column is difference for the row(s) with 0 vs the row(s) with nonzero SV values. need to make sure to keep the "present" value.
SV_data_avg <- SV_data_orders %>% group_by(Species)
SV_data_avg <- SV_data_avg %>% mutate(Species = as.character(Species), SV = as.numeric(SV))
SV_data_avg <- SV_data_avg %>% mutate(SV = ifelse(SV == 0, NA, SV))
#SV_data_avg <- SV_data_avg %>% mutate(test = !(any(SV > 0) & SV ==0))
#SV_data_avg <- SV_data_avg %>% filter(!(any(SV > 0) & SV == 0))
SV_data_avg <- SV_data_avg %>% mutate(SV2 = median(SV, na.rm = TRUE))
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(SV3 = ifelse(all(is.na(SV)) & presence == "absent",0,SV2))
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(presence = ifelse( presence == "absent" & any(presence == "present"), "present", presence ))
SV_data_avg <- SV_data_avg %>% select("Species", "order", "SV3", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data_orders <- SV_data %>% left_join(fishbase_species, by = "Species")
SV_data_orders <- SV_data_orders %>% select("Species", "Order", "Family", "Genus", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data_avg <- (SV_data_orders %>% group_by(Species)
%>% mutate(Species = as.character(Species), SV = as.numeric(SV))
%>% mutate(nonzero_exists = any(SV > 0))
%>% filter((nonzero_exists & SV == 0))
%>% summarise(SV = median(SV, na.rm = TRUE))
%>% ungroup()
%>% mutate(SV = as.character(SV))
%>% left_join(SV_data, by = "Species")
%>% rename("SV" = "SV.x")
%>% select("Species", "SV", "Order", "Family", "Genus", "presence", "genome.assembly", "ott_id", "flags", "tips")
%>% group_by(Species)
%>% distinct()
%>% ungroup()
)
SV_data_orders <- SV_data %>% left_join(fishbase_species, by = "Species")
SV_data_orders <- SV_data_orders %>% select("Species", "Order", "Family", "Genus", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data_avg <- (SV_data_orders %>% group_by(Species)
%>% mutate(Species = as.character(Species), SV = as.numeric(SV))
%>% mutate(nonzero_exists = any(SV > 0))
%>% filter((nonzero_exists & SV == 0))
%>% summarise(SV = median(SV, na.rm = TRUE))
%>% ungroup()
%>% mutate(SV = as.character(SV))
%>% left_join(SV_data, by = "Species")
%>% rename("SV" = "SV.x")
%>% select("Species", "SV", "Order", "Family", "Genus", "presence", "genome.assembly", "ott_id", "flags", "tips")
%>% group_by(Species)
%>% distinct()
%>% ungroup()
)
View(SV_data_orders)
SV_data_avg <- (SV_data_orders %>% group_by(Species)
%>% mutate(Species = as.character(Species), SV = as.numeric(SV))
%>% mutate(nonzero_exists = any(SV > 0))
%>% filter((nonzero_exists & SV == 0))
%>% summarise(SV = median(SV, na.rm = TRUE))
%>% ungroup()
%>% mutate(SV = as.character(SV))
%>% left_join(SV_data, by = "Species")
%>% rename("SV" = "SV.x")
%>% select("Species", "SV", "Order", "Family", "Genus", "presence", "genome.assembly", "ott_id", "flags", "tips")
%>% group_by(Species)
%>% distinct()
%>% ungroup()
)
View(SV_data_orders)
SV_data_orders <- SV_data %>% left_join(fishbase_species, by = "Species")
SV_data_orders <- SV_data_orders %>% select("Species", "Order", "Family", "Genus", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data_orders$Order
SV_data_avg <- (SV_data_orders %>% group_by(Species)
%>% mutate(Species = as.character(Species), SV = as.numeric(SV))
%>% mutate(nonzero_exists = any(SV > 0))
%>% filter((nonzero_exists & SV == 0))
%>% summarise(SV = median(SV, na.rm = TRUE))
%>% ungroup()
%>% mutate(SV = as.character(SV))
%>% left_join(SV_data, by = "Species")
%>% rename("SV" = "SV.x")
#%>% select("Species", "SV", "Order", "Family", "Genus", "presence", "genome.assembly", "ott_id", "flags", "tips")
%>% group_by(Species)
%>% distinct()
%>% ungroup()
)
SV_data_avg <- (SV_data_orders %>% group_by(Species)
%>% mutate(Species = as.character(Species), SV = as.numeric(SV))
%>% mutate(nonzero_exists = any(SV > 0))
%>% filter((nonzero_exists & SV == 0))
%>% summarise(SV = median(SV, na.rm = TRUE))
%>% ungroup()
%>% mutate(SV = as.character(SV))
%>% left_join(SV_data_orders, by = "Species")
%>% rename("SV" = "SV.x")
%>% select("Species", "SV", "Order", "Family", "Genus", "presence", "genome.assembly", "ott_id", "flags", "tips")
%>% group_by(Species)
%>% distinct()
%>% ungroup()
)
SV_data <- SV_data %>% left_join(fishbase_species, by = "Species")
SV_data <- SV_data_orders %>% select("Species", "Order", "Family", "Genus", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data_avg <- (SV_data %>% group_by(Species)
%>% mutate(Species = as.character(Species), SV = as.numeric(SV))
%>% mutate(nonzero_exists = any(SV > 0))
%>% filter((nonzero_exists & SV == 0))
%>% summarise(SV = median(SV, na.rm = TRUE))
%>% ungroup()
%>% mutate(SV = as.character(SV))
%>% left_join(SV_data, by = "Species")
%>% rename("SV" = "SV.x")
%>% select("Species", "SV", "Order", "Family", "Genus", "presence", "genome.assembly", "ott_id", "flags", "tips")
%>% group_by(Species)
%>% distinct()
%>% ungroup()
)
SV_data <- sp_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = tolower(species))
SV_data <- SV_data %>% group_by(species)
SV_data <- SV_data %>% mutate(
genome.assembly = if_else(
genome.assembly == '' & any(genome.assembly == 'y'),
'y',
genome.assembly
)
)
SV_data <- SV_data %>% ungroup()
SV_data <- SV_data %>% left_join(resolved_names, by = "species")
SV_data <- SV_data %>% mutate(tips = unique_name)
SV_data <- SV_data %>% rename("Source" = "source")
SV_data <- SV_data %>% filter(Source != "")
SV_data <- SV_data %>% mutate(SV = str_replace(SV, "2", "1"), str_replace(SV, "0.5", "1"), str_replace(SV, "2.5", "2"), str_replace(SV, "3.5", "4"))
SV_data <- SV_data %>% filter(unique_name !="")
SV_data <- SV_data %>% select("species", "unique_name", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data <- SV_data %>% filter(SV != "")
SV_data <- SV_data %>% mutate(presence = ifelse(SV == "0", "absent", "present"))
SV_data <- SV_data %>% mutate(SV = ifelse(SV == "present", NA, SV))
SV_data <- SV_data %>% rename("Species" = "unique_name")
SV_data <- SV_data %>% select("Species", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips")
View(SV_data)
SV_data_orders <- SV_data %>% left_join(fishbase_species, by = "Species")
SV_data_orders <- SV_data_orders %>% select("Species", "Order", "Family", "Genus", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data_avg <- SV_data_orders %>% group_by(Species)
SV_data_avg <- SV_data_avg %>% mutate(Species = as.character(Species), SV = as.numeric(SV))
SV_data_avg <- SV_data_avg %>% mutate(SV = ifelse(SV == 0, NA, SV))
#SV_data_avg <- SV_data_avg %>% mutate(test = !(any(SV > 0) & SV ==0))
#SV_data_avg <- SV_data_avg %>% filter(!(any(SV > 0) & SV == 0))
SV_data_avg <- SV_data_avg %>% mutate(SV2 = median(SV, na.rm = TRUE))
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(SV3 = ifelse(all(is.na(SV)) & presence == "absent",0,SV2))
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(presence = ifelse( presence == "absent" & any(presence == "present"), "present", presence ))
SV_data_avg <- SV_data_avg %>% select("Species", "Order", "Family", "Genus", "SV3", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data_avg <- SV_data_avg %>% distinct()
SV_data_avg <- SV_data_avg %>% ungroup()
SV_data_avg <- SV_data_avg %>% mutate(tips = str_replace(tips, " ", "_"))
View(SV_data_avg)
# check for other duplicates in species names:
SV_duplicates <- SV_data_avg[duplicated(SV_data_avg$Species),]
SV_data <- SV_data %>% left_join(fishbase_species, by = "Species")
SV_data <- SV_data_orders %>% select("Species", "Order", "Family", "Genus", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data_avg <- SV_data %>% group_by(Species)
SV_data_avg <- SV_data_avg %>% mutate(Species = as.character(Species), SV = as.numeric(SV))
SV_data_avg <- SV_data_avg %>% mutate(SV = ifelse(SV == 0, NA, SV))
#SV_data_avg <- SV_data_avg %>% mutate(test = !(any(SV > 0) & SV ==0))
#SV_data_avg <- SV_data_avg %>% filter(!(any(SV > 0) & SV == 0))
SV_data_avg <- SV_data_avg %>% mutate(SV2 = median(SV, na.rm = TRUE))
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(SV3 = ifelse(all(is.na(SV)) & presence == "absent",0,SV2))
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(presence = ifelse( presence == "absent" & any(presence == "present"), "present", presence ))
SV_data_avg <- SV_data_avg %>% select("Species", "Order", "Family", "Genus", "SV3", "presence", "genome.assembly", "ott_id", "flags", "tips")
SV_data_avg <- SV_data_avg %>% distinct()
SV_data_avg <- SV_data_avg %>% ungroup()
SV_data_avg <- SV_data_avg %>% mutate(tips = str_replace(tips, " ", "_"))
# duplicates because of diff orders for same species:
# undefined_orders <- SV_data_avg %>% group_by(Species) %>% filter(n_distinct(order) > 1)
# ohh this is beacause initially some species have orders in one entry but not in others! perhaps remove all those and redo orders with fishbase
# solved
# check for other duplicates in species names:
SV_duplicates <- SV_data_avg[duplicated(SV_data_avg$Species),]
View(SV_duplicates)
write.csv(SV_data_avg, "/Users/user2/Desktop/SV_project/SV_data_avg.csv")
SV_data_avg <- read.csv("/Users/user2/Desktop/SV_project/SV_data_avg.csv")
resolved_names <- SV_data_avg
# SV presence/ absence
tr <- tol_induced_subtree(ott_ids = resolved_names$ott_id[resolved_names$flags %in% c("sibling_higher", "")], label_format = "id")
tr <- multi2di(tr)
resolved_names$ott_id <- paste("ott", resolved_names$ott_id, sep = "")
tr$tip.label <- resolved_names$tips[match(tr$tip.label, paste("ott", resolved_names$ott_id, sep = ""))]
reference.df <- resolved_names[resolved_names$ott_id %in% tr$tip.label,c("Order", "Family", "Genus", "Species", "tips", "ott_id")]
colnames(reference.df) <- c("Order", "Family", "Genus", "Species", "tips_species", "tips")
rownames(reference.df) <- reference.df$tips
reference.df <- resolved_names[resolved_names$ott_id %in% tr$tip.label,c("Order", "Family", "Genus", "Species", "tips", "ott_id")]
View(tr)
# SV presence/ absence
tr <- tol_induced_subtree(ott_ids = resolved_names$ott_id[resolved_names$flags %in% c("sibling_higher", "")], label_format = "id")
View(tr)
source("/Users/user2/Desktop/SV_project/SV_functions.R")
SV_data_avg <- read.csv("/Users/user2/Desktop/SV_project/SV_data_avg.csv")
resolved_names <- SV_data_avg
# SV presence/ absence
tr <- tol_induced_subtree(ott_ids = resolved_names$ott_id[resolved_names$flags %in% c("sibling_higher", "")], label_format = "id")
View(tr)
tr <- multi2di(tr)
resolved_names$ott_id <- paste("ott", resolved_names$ott_id, sep = "")
View(resolved_names)
tr$tip.label <- resolved_names$tips[match(tr$tip.label, paste("ott", resolved_names$ott_id, sep = ""))]
View(tr)
# SV presence/ absence
tr <- tol_induced_subtree(ott_ids = resolved_names$ott_id[resolved_names$flags %in% c("sibling_higher", "")], label_format = "id")
tr <- multi2di(tr)
View(tr)
rm(tr)
# SV presence/ absence
tr <- tol_induced_subtree(ott_ids = resolved_names$ott_id[resolved_names$flags %in% c("sibling_higher", "")], label_format = "id")
tr <- multi2di(tr)
resolved_names$ott_id <- paste("ott", resolved_names$ott_id, sep = "")
source("/Users/user2/Desktop/SV_project/SV_functions.R")
SV_data_avg <- read.csv("/Users/user2/Desktop/SV_project/SV_data_avg.csv")
resolved_names <- SV_data_avg
# SV presence/ absence
tr <- tol_induced_subtree(ott_ids = resolved_names$ott_id[resolved_names$flags %in% c("sibling_higher", "")], label_format = "id")
tr <- multi2di(tr)
View(resolved_names)
View(tr)
SV_data_avg <- read.csv("/Users/user2/Desktop/SV_project/SV_data_avg.csv")
resolved_names <- SV_data_avg
paste("ott", resolved_names$ott_id, sep = "")
source("/Users/user2/Desktop/SV_project/SV_functions.R")
SV_data_avg <- read.csv("/Users/user2/Desktop/SV_project/SV_data_avg.csv")
resolved_names <- SV_data_avg
# SV presence/ absence
tr <- tol_induced_subtree(ott_ids = resolved_names$ott_id[resolved_names$flags %in% c("sibling_higher", "")], label_format = "id")
tr <- multi2di(tr)
resolved_names$ott_id <- paste("ott", resolved_names$ott_id, sep = "")
View(tr)
reference.df <- resolved_names[resolved_names$ott_id %in% tr$tip.label,c("Order", "Family", "Genus", "Species", "tips", "ott_id")]
colnames(reference.df) <- c("Order", "Family", "Genus", "Species", "tips_species", "tips")
rownames(reference.df) <- reference.df$tips
View(reference.df)
# some are duplicated, or have missing data, remove them
reference.df <- reference.df[!duplicated(reference.df$unique_name),]
reference.df <- reference.df[!is.na(reference.df$unique_name),]
SV_data_avg <- read.csv("/Users/user2/Desktop/SV_project/SV_data_avg.csv")
resolved_names <- SV_data_avg
# SV presence/ absence
tr <- tol_induced_subtree(ott_ids = resolved_names$ott_id[resolved_names$flags %in% c("sibling_higher", "")], label_format = "id")
tr <- multi2di(tr)
resolved_names$ott_id <- paste("ott", resolved_names$ott_id, sep = "")
# time calibrate the tree:
reference.df <- resolved_names[resolved_names$ott_id %in% tr$tip.label,c("Order", "Family", "Genus", "Species", "tips", "ott_id")]
colnames(reference.df) <- c("Order", "Family", "Genus", "Species", "tips_species", "tips")
rownames(reference.df) <- reference.df$tips
# # two tips can't be found in the resolved_names df, but I cannot figure out why
# > tr$tip.label[!(tr$tip.label %in% resolved_names$ott_id)]
# [1] "mrcaott320143ott351725" "mrcaott106188ott185786"
# some are duplicated, or have missing data, remove them
reference.df <- reference.df[!duplicated(reference.df$unique_name),]
SV_data_avg <- read.csv("/Users/user2/Desktop/SV_project/SV_data_avg.csv")
resolved_names <- SV_data_avg
# SV presence/ absence
tr <- tol_induced_subtree(ott_ids = resolved_names$ott_id[resolved_names$flags %in% c("sibling_higher", "")], label_format = "id")
tr <- multi2di(tr)
resolved_names$ott_id <- paste("ott", resolved_names$ott_id, sep = "")
# time calibrate the tree:
reference.df <- resolved_names[resolved_names$ott_id %in% tr$tip.label,c("Order", "Family", "Genus", "Species", "tips", "ott_id")]
colnames(reference.df) <- c("Order", "Family", "Genus", "Species", "tips_species", "tips")
rownames(reference.df) <- reference.df$tips
View(reference.df)
SV_duplicates <- reference.df[duplicated(reference.df$Species),]
# some are duplicated, or have missing data, remove them
reference.df <- reference.df[!duplicated(reference.df$Species),]
reference.df <- reference.df[!is.na(reference.df$Species),]
here
here()
saveRDS(reference.df, "/Users/user2/Desktop/SV_project/reference_df.rds")
saveRDS(tr, "/Users/user2/Desktop/SV_project/tol_induced_tree.rds")
saveRDS(reference.df, "/Users/user2/Desktop/SV_project/reference_df.rds")
saveRDS(tr, "/Users/user2/Desktop/SV_project/tol_induced_tree.rds")
reference.df <- readRDS("/Users/user2/Desktop/SV_project/reference_df.rds")
tr <- readRDS("/Users/user2/Desktop/SV_project/tol_induced_tree.rds")
timetree_order <- ape::read.tree("/Users/user2/Desktop/SV_project/timetree_data/actinopterygii_order.nwk")
timetree_order <- ape::read.tree("/Users/user2/Desktop/SV_project/timetree_data/actinopterygii_order.nwk")
timetree_order <- ape::read.tree("/Users/user2/Desktop/SV_project/timetree_data/actinopterygii_order.nwk")
timetree_family <- ape::read.tree("/Users/user2/Desktop/SV_project/timetree_data/actinopterygii_family.nwk")
timetree_genus <- ape::read.tree("/Users/user2/Desktop/SV_project/timetree_data/actinopterygii_genus.nwk")
# Use geiger to congruify the tree, works with treePL
# This seems to work up to genus, but not species (by replacing tip.labels with the same names)
setwd("/Users/user2/Desktop/SV_project/timetree_data/actinopterygii_genus.nwk")
geiger.order <- congruify.phylo(reference = timetree_order, target = tr, taxonomy = reference.df, tol = 0, scale = "treePL")
geiger.order <- congruify.phylo(reference = timetree_order, target = tr, taxonomy = reference.df, tol = 0, scale = "treePL")
library(ape)
library(corHMM)
library(phangorn)
library(stringr)
library(here)
library(rotl)
library(ggtree)
library(gsheet)
library(dplyr)
library(phytools)
library(geiger)
library(ggplot2)
library(rphylopic)
library(RColorBrewer)
library(ggimage)
library(rfishbase)
library(rentrez)
library(taxize)
library(rotl)
library(ggtree)
library(stringr)
library(scales)
library(gsheet)
library(ape)
library(patchwork)
library(ggpubr)
library(xlsx)
library(geiger)
library(here)
geiger.order <- congruify.phylo(reference = timetree_order, target = tr, taxonomy = reference.df, tol = 0, scale = "treePL")
install.packages('treePL')
av <- available.packages(filters=list())
av[av[, "Package"] == ‘treePL’, ]
av <- available.packages(filters=list())
av[av[, "Package"] == ‘treePL’, ]
av[av[, "Package"] == treePL, ]
av[av[, "Package"] == "treePL", ]
av[av[, "treePL"] == "treePL", ]
av[av[, "Package"] == "treePL", ]
View(av)
