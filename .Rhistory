comp_data <- comparative.data(tree, sim_data, names.col = "Species", vcv = TRUE)
model <- pgls(response ~ predictor, data = comp_data, lambda = "ML")
summary_model <- summary(model)
# Extract p-value safely
if ("predictor" %in% rownames(summary_model$tTable)) {
p_val <- summary_model$tTable["predictor", "p-value"]
if (!is.na(p_val) && p_val < alpha) {
power_count <- power_count + 1
}
}
}, error = function(e) {
# Skip iteration on error
message(sprintf("Simulation %d failed: %s", i, e$message))
})
}
power_estimate <- power_count / n_sim
return(power_estimate)
}
set.seed(123)  # For reproducibility
power <- simulate_power_pgls(tree = trpy_n,
data = SV_data_avg,
beta = 0.5,
n_sim = 1000,
alpha = 0.05)
install.packages("phylolm")
library(phylolm)
library(phytools)  # for fastBM
simulate_power_phyloglm <- function(tree, data, beta = 1.0, n_sim = 100, alpha = 0.05) {
power_count <- 0
n <- nrow(data)
for (i in 1:n_sim) {
# Simulate a continuous predictor with phylogenetic signal
predictor <- fastBM(tree)
# Linear predictor for logistic model
eta <- beta * predictor
prob <- 1 / (1 + exp(-eta))  # inverse logit
# Simulate binary response (presence/absence)
response <- rbinom(n = n, size = 1, prob = prob)
sim_data <- data.frame(Species = data$Species,
predictor = predictor,
presence_num = response)
# Fit phylogenetic logistic regression
tryCatch({
fit <- phyloglm(presence_num ~ predictor,
data = sim_data,
phy = tree,
method = "logistic_MPLE",
btol = 10^-6)
p_val <- summary(fit)$coefficients["predictor", "Pr(>|z|)"]
if (!is.na(p_val) && p_val < alpha) {
power_count <- power_count + 1
}
}, error = function(e) {
message(sprintf("Simulation %d failed: %s", i, e$message))
})
}
power_estimate <- power_count / n_sim
return(power_estimate)
}
set.seed(123)
power <- simulate_power_phyloglm(tree = trpy_n,
data = SV_data_avg,
beta = 1.0,   # logistic regression coefficient
n_sim = 500,
alpha = 0.05)
cat("Estimated power:", power, "\n")
getwd()
# add orders
orders_df <- read.csv("/Users/juliamaja/Downloads/PFC_taxonomy.csv")
orers_df <- orders_df %>% rename("Species" = "genus.species")
orders_df$Species <- gsub(" ", "_", orders_df$Species)
orders_df <- orders_df %>% rename("Species" = "genus.species")
orders_df$Species <- gsub(" ", "_", orders_df$Species)
View(orers_df)
View(orders_df)
ref.plot <- ggtree(ref_tree, layout = "circular") %<+% tip_df +
geom_tippoint(aes(color = Order), size = 3, alpha = 0.9, na.rm = TRUE) +
theme(legend.position = "right") +
ggtitle("Fish Tree with Orders")
ref.plot
ref.plot <- ggtree(ref_tree, layout = "circular") %<+% tip_df +
geom_tippoint(aes(color = order), size = 3, alpha = 0.9, na.rm = TRUE) +
theme(legend.position = "right") +
ggtitle("Fish Tree with Orders")
ref.plot
ref.plot <- ref.plot + geom_tile(data = ref.plot$data[1:length(ref_tree$tip.label),], aes(y=y, x=x + 15, fill = order), inherit.aes = FALSE, color = "transparent") + scale_fill_manual(values = random_colors)
ref.plot
View(ref.plot)
ref.plot <- ggtree(ref_tree, layout = "circular") %<+% tip_df +
geom_tippoint(aes(color = sampled), size = 2.5, alpha = 0.8) +
scale_color_manual(values = c("Sampled" = "red", "Other" = "gray")) +
new_scale_fill() +  # allow second fill scale
geom_fruit(
data = tip_df,
geom = geom_tile,
mapping = aes(y = label, fill = order),
width = 0.04,
offset = 0.015,
color = NA
) +
theme(legend.position = "right") +
ggtitle("Fish Tree with Sampled Tips and Taxonomic Order Ring")
install.packages("ggtreeExtra")  # if not already installed
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtreeExtra")
library(ggtreeExtra)
library(ggnewscale)
ref.plot <- ggtree(ref_tree, layout = "circular") %<+% tip_df +
geom_tippoint(aes(color = sampled), size = 2.5, alpha = 0.8) +
scale_color_manual(values = c("Sampled" = "red", "Other" = "gray")) +
new_scale_fill() +  # allow second fill scale
geom_fruit(
data = tip_df,
geom = geom_tile,
mapping = aes(y = label, fill = order),
width = 0.04,
offset = 0.015,
color = NA
) +
theme(legend.position = "right") +
ggtitle("Fish Tree with Sampled Tips and Taxonomic Order Ring")
ref.plot
View(SV_data_avg)
View(sp_data)
View(SV_data)
SV_data <- sp_data %>% mutate(species = str_replace(species, " ", "_")) # as of april 17: 597 obs. as of june 6: 773 obs
SV_data <- SV_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = tolower(species))
SV_data <- SV_data %>% group_by(species)
SV_data <- SV_data %>% mutate(
genome.assembly = if_else(
genome.assembly == '' & any(genome.assembly == 'y'),
'y',
genome.assembly
)
)
SV_data <- SV_data %>% ungroup()
SV_data <- SV_data %>% left_join(resolved_names, by = "species")
SV_data <- SV_data %>% mutate(tips = unique_name)
SV_data <- SV_data %>% rename("Source" = "source")
SV_data <- SV_data %>% filter(Source != "")
SV_data <- SV_data %>% filter(Source != "")
SV_data <- SV_data %>% mutate(SV = str_replace(SV, "2", "1"), str_replace(SV, "0.5", "1"), str_replace(SV, "2.5", "2"), str_replace(SV, "3.5", "4"))
SV_data <- SV_data %>% filter(unique_name !="")
SV_data <- SV_data %>% select("species", "unique_name", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips", "SV.not.in.figure")
SV_data <- SV_data %>% filter(SV != "")
SV_data <- sp_data %>% mutate(species = str_replace(species, " ", "_")) # as of april 17: 597 obs. as of june 6: 773 obs
SV_data <- SV_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = tolower(species))
SV_data <- SV_data %>% group_by(species)
SV_data <- SV_data %>% mutate(
genome.assembly = if_else(
genome.assembly == '' & any(genome.assembly == 'y'),
'y',
genome.assembly
)
)
SV_data <- SV_data %>% ungroup()
SV_data <- SV_data %>% left_join(resolved_names, by = "species")
SV_data <- SV_data %>% mutate(tips = unique_name)
SV_data <- SV_data %>% rename("Source" = "source")
SV_data <- SV_data %>% filter(Source == "")
View(SV_data)
SV_data <- sp_data %>% mutate(species = str_replace(species, " ", "_")) # as of april 17: 597 obs. as of june 6: 773 obs
SV_data <- SV_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = tolower(species))
SV_data <- SV_data %>% group_by(species)
SV_data <- SV_data %>% mutate(
genome.assembly = if_else(
genome.assembly == '' & any(genome.assembly == 'y'),
'y',
genome.assembly
)
)
SV_data <- SV_data %>% ungroup()
SV_data <- SV_data %>% left_join(resolved_names, by = "species")
SV_data <- SV_data %>% mutate(tips = unique_name)
SV_data <- SV_data %>% rename("Source" = "source")
SV_data <- SV_data %>% filter(SV != "no data")
SV_data <- SV_data %>% filter(Species == "")
SV_data <- SV_data %>% mutate(SV = str_replace(SV, "2", "1"), str_replace(SV, "0.5", "1"), str_replace(SV, "2.5", "2"), str_replace(SV, "3.5", "4"))
SV_data <- SV_data %>% filter(unique_name !="")
View(SV_data)
SV_data <- sp_data %>% mutate(species = str_replace(species, " ", "_")) # as of april 17: 597 obs. as of june 6: 773 obs
SV_data <- SV_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = tolower(species))
SV_data <- SV_data %>% group_by(species)
SV_data <- SV_data %>% mutate(
genome.assembly = if_else(
genome.assembly == '' & any(genome.assembly == 'y'),
'y',
genome.assembly
)
)
SV_data <- SV_data %>% ungroup()
SV_data <- SV_data %>% left_join(resolved_names, by = "species")
SV_data <- SV_data %>% mutate(tips = unique_name)
SV_data <- SV_data %>% rename("Source" = "source")
SV_data <- SV_data %>% filter(SV != "no data")
SV_data <- SV_data %>% filter(species == "")
SV_data <- sp_data %>% mutate(species = str_replace(species, " ", "_")) # as of april 17: 597 obs. as of june 6: 773 obs
SV_data <- SV_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = tolower(species))
SV_data <- SV_data %>% group_by(species)
SV_data <- SV_data %>% mutate(
genome.assembly = if_else(
genome.assembly == '' & any(genome.assembly == 'y'),
'y',
genome.assembly
)
)
SV_data <- SV_data %>% ungroup()
SV_data <- SV_data %>% left_join(resolved_names, by = "species")
SV_data <- SV_data %>% mutate(tips = unique_name)
SV_data <- SV_data %>% rename("Source" = "source")
SV_data <- SV_data %>% filter(SV != "no data")
SV_data <- SV_data %>% filter(species != "")
SV_data <- SV_data %>% mutate(SV = str_replace(SV, "2", "1"), str_replace(SV, "0.5", "1"), str_replace(SV, "2.5", "2"), str_replace(SV, "3.5", "4"))
SV_data <- SV_data %>% filter(unique_name !="")
SV_data <- sp_data %>% mutate(species = str_replace(species, " ", "_")) # as of april 17: 597 obs. as of june 6: 773 obs
SV_data <- SV_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = tolower(species))
SV_data <- SV_data %>% group_by(species)
SV_data <- SV_data %>% mutate(
genome.assembly = if_else(
genome.assembly == '' & any(genome.assembly == 'y'),
'y',
genome.assembly
)
)
SV_data <- SV_data %>% ungroup()
SV_data <- SV_data %>% left_join(resolved_names, by = "species")
SV_data <- SV_data %>% mutate(tips = unique_name)
SV_data <- SV_data %>% rename("Source" = "source")
SV_data <- SV_data %>% filter(SV != "no data")
SV_data <- SV_data %>% filter(species != "")
SV_data <- SV_data %>% mutate(SV = str_replace(SV, "2", "1"), str_replace(SV, "0.5", "1"), str_replace(SV, "2.5", "2"), str_replace(SV, "3.5", "4"))
SV_data <- SV_data %>% filter(unique_name =="")
View(SV_data)
SV_data <- sp_data %>% mutate(species = str_replace(species, " ", "_")) # as of april 17: 597 obs. as of june 6: 773 obs
SV_data <- SV_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = tolower(species))
SV_data <- SV_data %>% group_by(species)
SV_data <- SV_data %>% mutate(
genome.assembly = if_else(
genome.assembly == '' & any(genome.assembly == 'y'),
'y',
genome.assembly
)
)
SV_data <- SV_data %>% ungroup()
SV_data <- SV_data %>% left_join(resolved_names, by = "species")
SV_data <- SV_data %>% mutate(tips = unique_name)
SV_data <- SV_data %>% rename("Source" = "source")
SV_data <- SV_data %>% filter(SV != "no data")
SV_data <- SV_data %>% filter(species != "")
SV_data <- SV_data %>% mutate(SV = str_replace(SV, "2", "1"), str_replace(SV, "0.5", "1"), str_replace(SV, "2.5", "2"), str_replace(SV, "3.5", "4"))
SV_data <- SV_data %>% filter(unique_name !="")
SV_data <- sp_data %>% mutate(species = str_replace(species, " ", "_")) # as of april 17: 597 obs. as of june 6: 773 obs
SV_data <- SV_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = tolower(species))
SV_data <- SV_data %>% group_by(species)
SV_data <- SV_data %>% mutate(
genome.assembly = if_else(
genome.assembly == '' & any(genome.assembly == 'y'),
'y',
genome.assembly
)
)
SV_data <- SV_data %>% ungroup()
SV_data <- SV_data %>% left_join(resolved_names, by = "species")
SV_data <- SV_data %>% mutate(tips = unique_name)
SV_data <- SV_data %>% rename("Source" = "source")
SV_data <- SV_data %>% filter(SV != "no data")
SV_data <- SV_data %>% filter(species != "")
count(SV_data %>% filter(is.na(unique_name)))
SV_data <- sp_data %>% mutate(species = str_replace(species, " ", "_")) # as of april 17: 597 obs. as of june 6: 773 obs
SV_data <- SV_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = tolower(species))
SV_data <- SV_data %>% group_by(species)
SV_data <- SV_data %>% mutate(
genome.assembly = if_else(
genome.assembly == '' & any(genome.assembly == 'y'),
'y',
genome.assembly
)
)
SV_data <- SV_data %>% ungroup()
SV_data <- SV_data %>% left_join(resolved_names, by = "species")
SV_data <- SV_data %>% mutate(tips = unique_name)
SV_data <- SV_data %>% rename("Source" = "source")
SV_data <- SV_data %>% filter(SV != "no data")
SV_data <- SV_data %>% filter(species != "")
SV_data <- SV_data %>% mutate(SV = str_replace(SV, "2", "1"), str_replace(SV, "0.5", "1"), str_replace(SV, "2.5", "2"), str_replace(SV, "3.5", "4"))
SV_data <- SV_data %>% filter(unique_name !="") #count(SV_data %>% filter(is.na(unique_name))) = 90
SV_data <- SV_data %>% select("species", "unique_name", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips", "SV.not.in.figure")
SV_data_avg <- SV_data %>% group_by(Species)
SV_data_avg <- SV_data %>% group_by(Species)
SV_data <- sp_data %>% mutate(species = str_replace(species, " ", "_")) # as of april 17: 597 obs. as of june 6: 773 obs
SV_data <- SV_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = tolower(species))
SV_data <- SV_data %>% group_by(species)
SV_data <- SV_data %>% mutate(
genome.assembly = if_else(
genome.assembly == '' & any(genome.assembly == 'y'),
'y',
genome.assembly
)
)
SV_data <- SV_data %>% ungroup()
SV_data <- SV_data %>% left_join(resolved_names, by = "species")
SV_data <- SV_data %>% mutate(tips = unique_name)
SV_data <- SV_data %>% rename("Source" = "source")
SV_data <- SV_data %>% filter(SV != "no data")
SV_data <- SV_data %>% filter(species != "")
SV_data <- SV_data %>% mutate(SV = str_replace(SV, "2", "1"), str_replace(SV, "0.5", "1"), str_replace(SV, "2.5", "2"), str_replace(SV, "3.5", "4"))
SV_data <- SV_data %>% filter(unique_name !="") #count(SV_data %>% filter(is.na(unique_name))) = 90
SV_data <- SV_data %>% select("species", "unique_name", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips", "SV.not.in.figure")
SV_data <- sp_data %>% mutate(species = str_replace(species, " ", "_")) # as of april 17: 597 obs. as of june 6: 773 obs
SV_data <- SV_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = tolower(species))
SV_data <- SV_data %>% group_by(species)
SV_data <- SV_data %>% mutate(
genome.assembly = if_else(
genome.assembly == '' & any(genome.assembly == 'y'),
'y',
genome.assembly
)
)
SV_data <- SV_data %>% ungroup()
SV_data <- SV_data %>% left_join(resolved_names, by = "species")
SV_data <- SV_data %>% mutate(tips = unique_name)
SV_data <- SV_data %>% rename("Source" = "source")
SV_data <- SV_data %>% filter(SV != "no data")
SV_data <- SV_data %>% filter(species != "")
SV_data <- SV_data %>% mutate(SV = str_replace(SV, "2", "1"), str_replace(SV, "0.5", "1"), str_replace(SV, "2.5", "2"), str_replace(SV, "3.5", "4"))
SV_data <- SV_data %>% filter(unique_name !="") #coun
SV_data <- SV_data %>% select("species", "unique_name", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips", "SV.not.in.figure")
SV_data <- SV_data %>% select("unique_name", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips", "SV.not.in.figure")
SV_data <- SV_data %>% select("unique_name", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips",
#"SV.not.in.figure"
)
SV_data <- SV_data %>% select("unique_name", "order", "SV", "presence", "genome.assembly", "ott_id", "flags",
#"tips",
#"SV.not.in.figure"
)
SV_data <- SV_data %>% select("unique_name", "order", "SV", "presence", "genome.assembly", "ott_id",
#"flags",
#"tips",
#"SV.not.in.figure"
)
SV_data <- SV_data %>% select("unique_name", "order", "SV", "presence", "genome.assembly",
#"ott_id",
#"flags",
#"tips",
#"SV.not.in.figure"
)
SV_data <- SV_data %>% select("unique_name", "order", "SV", "presence",
#"genome.assembly",
#"ott_id",
#"flags",
#"tips",
#"SV.not.in.figure"
)
SV_data <- SV_data %>% select("unique_name", "order", "SV",
#"presence",
#"genome.assembly",
#"ott_id",
#"flags",
#"tips",
#"SV.not.in.figure"
)
SV_data <- SV_data %>% select("unique_name", "order",
#"SV",
#"presence",
#"genome.assembly",
#"ott_id",
#"flags",
#"tips",
#"SV.not.in.figure"
)
SV_data <- SV_data %>% select("unique_name",
#"order",
#"SV",
#"presence",
#"genome.assembly",
#"ott_id",
#"flags",
#"tips",
#"SV.not.in.figure"
)
SV_data <- SV_data %>% select(#"unique_name",
"order",
#"SV",
#"presence",
#"genome.assembly",
#"ott_id",
#"flags",
#"tips",
#"SV.not.in.figure"
)
#SV_data <- SV_data %>% select("unique_name", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips", "SV.not.in.figure")
SV_data <- SV_data %>% filter(SV != "")
SV_data <- SV_data %>% mutate(presence = ifelse(SV == "0", "absent", "present"))
SV_data <- SV_data %>% mutate(SV = ifelse(SV == "present", NA, SV))
SV_data <- SV_data %>% rename("Species" = "unique_name")
SV_data <- SV_data %>% select("Species", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips", "SV.not.in.figure")
SV_data <- SV_data %>% left_join(fishbase_species, by = "Species")
SV_data <- SV_data %>% select("Species", "Order", "Family", "Genus", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips", "SV.not.in.figure")
SV_data_avg <- SV_data %>% group_by(Species)
View(SV_data_avg)
SV_data_avg <- SV_data %>% group_by(Species)
SV_data_avg <- SV_data_avg %>% mutate(Species = as.character(Species), SV = as.numeric(SV))
SV_data_avg <- SV_data_avg %>% mutate(SV = ifelse(SV == 0, NA, SV))
SV_data_avg <- SV_data_avg %>% mutate(SV2 = median(SV, na.rm = TRUE))
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(SV3 = ifelse(all(is.na(SV)) & presence == "absent",0,SV2))
#SV_avg =
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(SV3 = ifelse( presence == "absent" & any(presence == "present"), NA, SV3))
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(presence = ifelse( presence == "absent" & any(presence == "present"), "present", presence ))
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(SV3 = ifelse(is.na(SV3) & any(!is.na(SV3)), first(na.omit(SV3)), SV3))
SV_data_avg <- SV_data_avg %>% select("Species", "Order", "Family", "Genus", "SV3", "presence", "genome.assembly", "ott_id", "flags", "tips", "SV.not.in.figure")
#dealing with cases where SV is not seen in figure:
SV_data_avg <- SV_data_avg %>% group_by(Species) %>% mutate(SV.not.in.figure = if (any(SV.not.in.figure != "y")) ifelse(SV.not.in.figure == "y", "", SV.not.in.figure) else SV.not.in.figure) %>% ungroup()
SV_data_avg <- SV_data_avg %>% distinct()
SV_data_avg <- SV_data_avg %>% ungroup()
SV_data_avg <- SV_data_avg %>% mutate(tips = str_replace(tips, " ", "_")) # as of april 17: 478 species. as of june 6: 592
#SV_data_avg <- SV_data_avg %>% filter(!duplicated(SV_data_avg$Species))
SV_duplicates <- SV_data_avg[duplicated(SV_data_avg$Species),]
View(SV_duplicates)
View(SV_data_avg)
SV_data <- sp_data %>% mutate(species = str_replace(species, " ", "_")) # as of april 17: 597 obs. as of june 6: 773 obs
SV_data <- SV_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = tolower(species))
SV_data <- SV_data %>% group_by(species)
SV_data <- SV_data %>% mutate(
genome.assembly = if_else(
genome.assembly == '' & any(genome.assembly == 'y'),
'y',
genome.assembly
)
)
SV_data <- SV_data %>% ungroup()
SV_data <- SV_data %>% left_join(resolved_names, by = "species")
SV_data <- SV_data %>% mutate(tips = unique_name)
SV_data <- SV_data %>% rename("Source" = "source")
SV_data <- SV_data %>% filter(Source != "")
SV_data <- SV_data %>% mutate(SV = str_replace(SV, "2", "1"), str_replace(SV, "0.5", "1"), str_replace(SV, "2.5", "2"), str_replace(SV, "3.5", "4"))
SV_data <- SV_data %>% filter(unique_name !="")
SV_data <- SV_data %>% select("species", "unique_name", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips", "SV.not.in.figure")
SV_data <- sp_data %>% mutate(species = str_replace(species, " ", "_")) # as of april 17: 597 obs. as of june 6: 773 obs
SV_data <- SV_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = tolower(species))
SV_data <- SV_data %>% group_by(species)
SV_data <- SV_data %>% mutate(
genome.assembly = if_else(
genome.assembly == '' & any(genome.assembly == 'y'),
'y',
genome.assembly
)
)
SV_data <- SV_data %>% ungroup()
SV_data <- SV_data %>% left_join(resolved_names, by = "species")
SV_data <- SV_data %>% mutate(tips = unique_name)
SV_data <- SV_data %>% rename("Source" = "source")
SV_data <- SV_data %>% filter(Source != "")
SV_data <- SV_data %>% mutate(SV = str_replace(SV, "2", "1"), str_replace(SV, "0.5", "1"), str_replace(SV, "2.5", "2"), str_replace(SV, "3.5", "4"))
SV_data <- SV_data %>% filter(unique_name !="")
SV_data <- SV_data %>% select("species", "unique_name", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips", "SV.not.in.figure")
library(ape)
library(corHMM)
library(phangorn)
library(stringr)
library(here)
library(rotl)
library(ggtree)
library(gsheet)
library(dplyr)
library(phytools)
library(geiger)
library(ggplot2)
library(rphylopic)
library(RColorBrewer)
library(ggimage)
library(rfishbase)
library(rentrez)
library(taxize)
SV_data <- sp_data %>% mutate(species = str_replace(species, " ", "_")) # as of april 17: 597 obs. as of june 6: 773 obs
SV_data <- SV_data %>% mutate(species = str_replace(species, " ", "_"))
SV_data <- SV_data %>% mutate(species = tolower(species))
SV_data <- SV_data %>% group_by(species)
SV_data <- SV_data %>% mutate(
genome.assembly = if_else(
genome.assembly == '' & any(genome.assembly == 'y'),
'y',
genome.assembly
)
)
SV_data <- SV_data %>% ungroup()
SV_data <- SV_data %>% left_join(resolved_names, by = "species")
SV_data <- SV_data %>% mutate(tips = unique_name)
SV_data <- SV_data %>% rename("Source" = "source")
SV_data <- SV_data %>% filter(Source != "")
SV_data <- SV_data %>% mutate(SV = str_replace(SV, "2", "1"), str_replace(SV, "0.5", "1"), str_replace(SV, "2.5", "2"), str_replace(SV, "3.5", "4"))
SV_data <- SV_data %>% filter(unique_name !="")
SV_data <- SV_data %>% select("species", "unique_name", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips", "SV.not.in.figure")
SV_data <- SV_data %>% select("species")
library(dplyr)
select
SV_data <- SV_data %>% select(SV_data, "species", "unique_name", "order", "SV", "presence", "genome.assembly", "ott_id", "flags", "tips", "SV.not.in.figure")
View(sp_data)
testing <- sp_data %>% select("species")
